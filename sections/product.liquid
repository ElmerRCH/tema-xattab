<style>
  .zoom-container {
    position: relative;
    overflow: hidden;
  }

  .zoom-image {
    transition: transform 0.2s ease;
    transform-origin: center center;
  }

  .zoom-container:hover .zoom-image {
    transform: scale(2);
  }

  .zoom-container:active .zoom-image,
  .zoom-container:focus .zoom-image {
    transform: scale(2);
  }
</style>



<section class="py-8 bg-white md:py-16 dark:bg-gray-900 antialiased rounded-lg mb-5">
  <div class="max-w-screen-xl px-4 mx-auto 2xl:px-0">
    <div class="lg:grid lg:grid-cols-2 lg:gap-8 xl:gap-16">
      
      <!-- Galería de imágenes -->
      <div class="shrink-0 max-w-md lg:max-w-lg mx-auto">
        <div class="flex flex-col md:flex-row gap-4">
          
          <!-- Miniaturas -->
          <div class="flex md:flex-col gap-3 overflow-x-auto md:overflow-visible md:w-20">
            {% for image in product.images %}
              <button onclick="document.getElementById('main-image').src='{{ image | img_url: '1024x1024' }}'"
                      class="border border-gray-200 rounded-md overflow-hidden hover:ring-2 ring-gray-400">
                <img src="{{ image | img_url: '150x150' }}" alt="Vista {{ forloop.index }}" class="w-16 h-16 object-cover" width="100" height="100">
              </button>
            {% endfor %}
          </div>

          <!-- Imagen con zoom -->
          <div class="flex-1 relative zoom-container rounded-md" onmousemove="zoomImage(event)" onmouseleave="resetZoom()">
            <img id="main-image"
                 src="{{ product.featured_image | img_url: '1024x1024' }}"
                 alt="{{ product.title }}"
                 class="zoom-image w-full h-auto max-h-[500px] object-contain"
                 width="100"
                 height="100">
          </div>
        </div>
      </div>

      <!-- Información del producto -->
      <div class="mt-6 ml-8 sm:mt-8 lg:mt-0 border p-4 w-5/6 h-auto rounded-md">
        <h1 class="inline-block text-2xl font-semibold text-gray-900 dark:text-white">{{ product.title }}</h1>
        <p class="mt-2 text-2xl font-bold color-text-brand">{{ product.price | money }}</p>
        <p class="-mt-1 text-xs font-sans">IVA incluido</p>

        <!-- Formulario de compra con selector de cantidad funcional -->
        {% if product.available %}
          <!-- Input cantidad -->
          <label for="quantity-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Cantidad:</label>
          <div class="relative flex items-center max-w-[14rem] mb-4">
            <button type="button" id="decrement-button" class="bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 hover:bg-gray-200 border border-gray-300 rounded-s-lg p-3 h-11 focus:ring-2 focus:outline-none">
              <svg class="w-3 h-3 text-gray-900 dark:text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16" />
              </svg>
            </button>
            <input 
              type="number" 
              name="quantity" 
              id="quantity-input" 
              min="1" 
              value="1" 
              data-stock="{{ product.variants.first.inventory_quantity }}"
              required
              class="bg-gray-50 border-x-0 border-gray-300 h-11 text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full py-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"
            />
            <button type="button" id="increment-button" class="bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 hover:bg-gray-200 border border-gray-300 rounded-e-lg p-3 h-11 focus:ring-2 focus:outline-none">
              <svg class="w-3 h-3 text-gray-900 dark:text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16" />
              </svg>
            </button>
          </div>

          <!-- Botón comprar ahora -->
          <button type="button" id="buy-now-btn"
            class="w-full sm:w-2/5 h-10 text-white bg-brand-color hover:bg-gray-700 focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 inline-flex items-center justify-center">
            Comprar ahora
            <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9" />
            </svg>
          </button>

          <!-- Botón agregar al carrito -->
          {% render 'add-product-to-car', product: product %}
        {% else %}
          <div class="flex m-auto h-52">
            {% render 'message-no-stock' %}
          </div>
        {% endif %}
        </div>
    </div>
    
    {% if product.description != blank %}
      <div class="text-gray-800 text-sm leading-relaxed mt-4 m-auto p-4">
        {{ product.description }}
      </div>
    {% endif %}
  </div>
</section>



<script>
  const image = document.getElementById("main-image");

  function zoomImage(e) {
    const { left, top, width, height } = e.currentTarget.getBoundingClientRect();
    const x = ((e.clientX - left) / width) * 100;
    const y = ((e.clientY - top) / height) * 100;
    image.style.transformOrigin = `${x}% ${y}%`;
    image.style.transform = "scale(2)";
  }

  function resetZoom() {
    image.style.transformOrigin = "center center";
    image.style.transform = "scale(1)";
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const quantityInput = document.getElementById("quantity-input");
    const incrementBtn = document.getElementById("increment-button");
    const decrementBtn = document.getElementById("decrement-button");

    const maxStock = parseInt(quantityInput.dataset.stock, 10) || 1;

    const updateQuantity = (change) => {
      let currentValue = parseInt(quantityInput.value, 10) || 1;
      let newValue = currentValue + change;

      if (newValue < 1) newValue = 1;
      if (newValue > maxStock) newValue = maxStock;

      quantityInput.value = newValue;
    };

    incrementBtn.addEventListener("click", () => updateQuantity(1));
    decrementBtn.addEventListener("click", () => updateQuantity(-1));

    quantityInput.addEventListener("input", () => {
      let value = parseInt(quantityInput.value, 10);
      if (isNaN(value) || value < 1) {
        quantityInput.value = 1;
      } else if (value > maxStock) {
        quantityInput.value = maxStock;
      }
    });
  });
</script>

<script>
  document.getElementById('buy-now-btn').addEventListener('click', function () {
    const quantity = document.getElementById('quantity-input').value;
    const variantId = "{{ product.variants.first.id }}";
    window.location.href = `/cart/${variantId}:${quantity}`;
  });
</script>
